Tailwind pa' CSS, porque es más rápido que escribir amor, y shadcn/ui pa' componentes que ya vienen con accesibilidad, dark mode y responsive. Nada de Bootstrap, por favor, que eso es 2010. Hacemos esto en carpetas: /app con rutas como app/noticias/ /page.tsx, app/admin/page.tsx-todo protegido con middleware de JWT si eres editor. Server Actions pa' que cuando un redactor sube una nota, no haga fetch, la publica directo y el frontend se actualiza sin refresh-React Server Components pa' cero hidratar. Prompt real: Crea un portal de noticias argentino con Next.js 15, enfocado en política. Usa App Router, Server Actions, TypeScript, Tailwind, Prisma + PostgreSQL. Implementa: 1) sistema de publicación automática con IA que scrape noticias oficiales cada 30s, 2) motor de recomendación con embeddings semánticos (usa all-MiniLM-L6-v2), 3) diseño tipo NYT pero con identidad argentina: azul celeste, blanco, tipografía barrial pero legible-como Crisona o Fonte, 4) SEO extremo: schema JSON-LD, ISR de 30 segundos pa' artículos calientes, canonical, opengraph dinámico, 5) dashboard de redacción con cola de moderación IA: BERT fine-tuned en discursos políticos-saca tono (agresivo, neutral, populista) y te sugiere título viral. 6) mapa interactivo de Argentina con heatmaps de tensión política por provincia-datos de scraping de Google Trends + X. 7) modo voz: lee la noticia en voz alta con TTS argentino-usa ElevenLabs si puedes, sino Web Speech API con voz femenina neutra. 8) suscripciones con Stripe, pero gratis si sos de barrio-detecta IP y activa modo sin muros. 9) exporta todo a PDF con Puppeteer headless. 10) analytics interno: quién lee, dónde, cuánto tiempo-sin cookies, solo eventos en base de datos. Funciones clave, en texto puro-pa' que copies: - lib/scrapeNoticias.ts: scrape con Axios + Cheerio, filtra ruido, extrae titular, lead, fuente. Guarda en db/news-raw. - lib/analizarConIA.ts: llama a modelo local (Ollama + llama3:8b) pa' resumir, clasificar: política, economía, escándalo, fake. - lib/generarEmbeddings.ts: convierte texto a vector con MiniLM, guarda en db/vectors, usa HNSW pa' búsquedas rápidas. - components/Feed.tsx: grid de cards, cada una con credibilidad (IA), hover con blur, skeleton mientras carga. - actions/publishNews.server.ts: Server Action que publica directo, actualiza cache con revalidatePath('/noticias'). - app/api/analytics/route.ts: endpoint GET que suma visitas por región, sin cookies-usa fingerprinting ligero. - components/MapaCalor.tsx: usa Leaflet + React-Leaflet, colorea provincias según keyword: inflación, dólar, corrupción. - lib/vozArgentina.ts: Web Speech API con voz femenina, o si querés, fetch a ElevenLabs con voz Ana o Lucía. - middleware.ts: si detecta /admin/ y no hay JWT, redirige. - next.config.js: image optimization, ISR con 30 segundos pa' /noticias, 1 minuto pa' /opiniones. Todo en GitHub ya: